<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Regression" duration-ms="32188" started-at="2020-04-14T18:27:11 EDT" finished-at="2020-04-14T18:27:43 EDT">
    <groups>
      <group name="donations">
        <method signature="IATS.IATSACHRecurPaymenttypelogic()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="IATSACHRecurPaymenttypelogic" class="com.fnoor.FundraisingTest.IATS"/>
        <method signature="IATS.IATSACHRecurring()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="IATSACHRecurring" class="com.fnoor.FundraisingTest.IATS"/>
        <method signature="IATS.IATSRecurring()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="IATSRecurring" class="com.fnoor.FundraisingTest.IATS"/>
        <method signature="IATS.iatsSingle()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="iatsSingle" class="com.fnoor.FundraisingTest.IATS"/>
      </group> <!-- donations -->
    </groups>
    <test name="Donations" duration-ms="32188" started-at="2020-04-14T18:27:11 EDT" finished-at="2020-04-14T18:27:43 EDT">
      <class name="com.fnoor.FundraisingTest.IATS">
        <test-method status="PASS" signature="IATSACHRecurPaymenttypelogic()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="IATSACHRecurPaymenttypelogic" duration-ms="11042" started-at="2020-04-14T18:27:11 EDT" finished-at="2020-04-14T18:27:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IATSACHRecurPaymenttypelogic -->
        <test-method status="PASS" signature="getScreenshot(org.testng.ITestResult)[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="getScreenshot" is-config="true" duration-ms="5" started-at="2020-04-14T18:27:22 EDT" finished-at="2020-04-14T18:27:22 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IATSACHRecurPaymenttypelogic status=SUCCESS method=IATS.IATSACHRecurPaymenttypelogic()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="IATSACHRecurring()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="IATSACHRecurring" duration-ms="6900" started-at="2020-04-14T18:27:22 EDT" finished-at="2020-04-14T18:27:29 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IATSACHRecurring -->
        <test-method status="PASS" signature="getScreenshot(org.testng.ITestResult)[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="getScreenshot" is-config="true" duration-ms="1" started-at="2020-04-14T18:27:29 EDT" finished-at="2020-04-14T18:27:29 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IATSACHRecurring status=SUCCESS method=IATS.IATSACHRecurring()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="FAIL" signature="IATSRecurring()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="IATSRecurring" duration-ms="5896" started-at="2020-04-14T18:27:29 EDT" finished-at="2020-04-14T18:27:34 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Urls are not the same]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Urls are not the same
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at com.fnoor.FundraisingTest.IATS.IATSRecurring(IATS.java:137)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IATSRecurring -->
        <test-method status="PASS" signature="getScreenshot(org.testng.ITestResult)[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="getScreenshot" is-config="true" duration-ms="607" started-at="2020-04-14T18:27:34 EDT" finished-at="2020-04-14T18:27:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IATSRecurring status=FAILURE method=IATS.IATSRecurring()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="iatsSingle()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="iatsSingle" duration-ms="7587" started-at="2020-04-14T18:27:35 EDT" finished-at="2020-04-14T18:27:43 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iatsSingle -->
        <test-method status="PASS" signature="getScreenshot(org.testng.ITestResult)[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="getScreenshot" is-config="true" duration-ms="1" started-at="2020-04-14T18:27:43 EDT" finished-at="2020-04-14T18:27:43 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iatsSingle status=SUCCESS method=IATS.iatsSingle()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.fnoor.FundraisingTest.IATS@6e2aa843]" name="tearDown" is-config="true" duration-ms="100" started-at="2020-04-14T18:27:43 EDT" finished-at="2020-04-14T18:27:43 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.fnoor.FundraisingTest.IATS -->
    </test> <!-- Donations -->
  </suite> <!-- Regression -->
</testng-results>
